- name: Install microk8s
  community.general.snap:
    name:
      - microk8s
    classic: true

- name: Add pi user to applicable groups
  ansible.builtin.user:
    name: pi
    groups:
      - microk8s
    append: true

- name: Install python packages for k8s management
  ansible.builtin.pip:
    name:
      - kubernetes

- name: Status of mycommunity repo
  ansible.builtin.command: /snap/bin/microk8s addons repo list
  register: microk8s_community_repo
  changed_when: false

- name: Add custom microk8s community repo
  ansible.builtin.command: >
    {{ microk8s }} addons repo add mycommunity {{ microk8s_community_addon_repo }}
  when: microk8s_community_repo.stdout.find('mycommunity') == -1

- name: Status of microk8s dns add-on
  ansible.builtin.command: "{{ microk8s }} status -a dns"
  register: microk8s_dns_addon
  changed_when: false

- name: Install microk8s dns add-on
  ansible.builtin.command: "{{ microk8s }} enable dns"
  when: microk8s_dns_addon.stdout.find('enabled') == -1

- name: Status of microk8s ingress add-on
  ansible.builtin.command: "{{ microk8s }} status -a ingress"
  register: microk8s_ingress_addon
  changed_when: false

- name: Install microk8s ingress add-on
  ansible.builtin.command: "{{ microk8s }} enable ingress"
  when: microk8s_ingress_addon.stdout.find('enabled') == -1

- name: Status of microk8s argocd add-on
  ansible.builtin.command: "{{ microk8s }} status -a argocd"
  register: microk8s_argocd_addon
  changed_when: false

- name: Install microk8s argocd add-on
  ansible.builtin.command: "{{ microk8s }} enable argocd"
  when: microk8s_argocd_addon.stdout.find('enabled') == -1

- name: Get microk8s kubectl configuration
  ansible.builtin.command: "{{ microk8s }} config"
  register: microk8s_kubectl_config
  changed_when: false

- name: Save kubeconfig (rpi)
  ansible.builtin.copy:
    content: "{{ microk8s_kubectl_config.stdout }}"
    dest: /etc/kubeconfig
    mode: '644'

- name: Save kubeconfig (local)
  delegate_to: localhost
  ansible.builtin.copy:
    content: "{{ microk8s_kubectl_config.stdout }}"
    dest: "{{ local_kubeconfig_dest_path }}/kubectl-config-{{ inventory_hostname }}.yaml"
    owner: "{{ local_owner }}"
    group: "{{ local_group }}"
    mode: '644'
